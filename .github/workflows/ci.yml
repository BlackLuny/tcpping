name: CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tcpping-x86_64-linux-gnu
            use_cross: false
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: tcpping-x86_64-linux-musl
            use_cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tcpping-x86_64-darwin
            use_cross: false
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: tcpping-aarch64-darwin
            use_cross: false
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: tcpping-x86_64-windows
            use_cross: false

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install Cross
      if: matrix.use_cross
      run: cargo install cross
    
    - name: Build
      run: |
        if [ "${{ matrix.use_cross }}" = "true" ]; then
          cross build --verbose --release --target ${{ matrix.target }}
        else
          cargo build --verbose --release --target ${{ matrix.target }}
        fi
      shell: bash

    - name: Package Binaries
      run: |
        mkdir -p dist
        if [ "${{ runner.os }}" = "Windows" ]; then
          cp target/${{ matrix.target }}/release/tcpping-client.exe dist/
          cp target/${{ matrix.target }}/release/tcpping-server.exe dist/
          cd dist
          7z a -tzip ../${{ matrix.artifact_name }}.zip *
        else
          cp target/${{ matrix.target }}/release/tcpping-client dist/
          cp target/${{ matrix.target }}/release/tcpping-server dist/
          cd dist
          tar czf ../${{ matrix.artifact_name }}.tar.gz *
        fi
      shell: bash

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}.*
        retention-days: 7

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          tcpping-x86_64-linux-gnu.tar.gz
          tcpping-x86_64-linux-musl.tar.gz
          tcpping-x86_64-darwin.tar.gz
          tcpping-aarch64-darwin.tar.gz
          tcpping-x86_64-windows.zip
